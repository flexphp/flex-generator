{% set fkFnsNoBlame = fkFns|filter(v => not v.blameBy) %}
{% set useStatements = [] %}
<?php declare(strict_types=1);
{{ header|raw }}
namespace App\Controller;

{% if actions.Index or actions.Create or actions.Read or actions.Update or actions.Delete %}
{% set useStatements = useStatements|merge(['use Domain\\' ~ entity ~ '\\' ~ entity ~ 'FormType;']) %}
{% endif %}
{% for key,action in actions %}
{% set useStatements = useStatements|merge(['use Domain\\' ~ entity ~ '\\Request\\' ~ key ~ entity ~ 'Request;']) %}
{% endfor %}
{% for key,action in actions %}
{% set useStatements = useStatements|merge(['use Domain\\' ~ entity ~ '\\UseCase\\' ~ key ~ entity ~ 'UseCase;']) %}
{% endfor %}
{% for id,fkFn in fkFnsNoBlame %}
{% set useStatements = useStatements|merge(['use Domain\\' ~ entity ~ '\\Request\\Find' ~ entity ~ fkFn.fnSingular ~ 'Request;']) %}
{% set useStatements = useStatements|merge(['use Domain\\' ~ entity ~ '\\UseCase\\Find' ~ entity ~ fkFn.fnSingular ~ 'UseCase;']) %}
{% endfor %}
{% set useStatements = useStatements|merge(['use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Cache;']) %}
{% set useStatements = useStatements|merge(['use Sensio\\Bundle\\FrameworkExtraBundle\\Configuration\\Security;']) %}
{% set useStatements = useStatements|merge(['use Symfony\\Bundle\\FrameworkBundle\\Controller\\AbstractController;']) %}
{% set useStatements = useStatements|merge(['use Symfony\\Component\\HttpFoundation\\Request;']) %}
{% set useStatements = useStatements|merge(['use Symfony\\Component\\HttpFoundation\\Response;']) %}
{% if fkFnsNoBlame|length > 0 %}
{% set useStatements = useStatements|merge(['use Symfony\\Component\\HttpFoundation\\JsonResponse;']) %}
{% endif %}
{% set useStatements = useStatements|merge(['use Symfony\\Component\\Routing\\Annotation\\Route;']) %}
{% if actions.Create %}
{% set useStatements = useStatements|merge(['use Symfony\\Contracts\\Translation\\TranslatorInterface;']) %}
{% endif %}
{% if useStatements|length > 0 %}
{{ useStatements|sort|join("\n") }}
{% endif %}

/**
 * @Route("/{{ route }}")
 */
final class {{ entity }}Controller extends AbstractController
{
{% for action in actions %}
{% if not loop.last %}
{{ action|raw }}
{% else %}
{{ action|trim(side='right')|raw }}
{% endif %}
{% endfor %}
{% if actions|length > 0 and fkFnsNoBlame|length > 0 %}

{% endif %}
{% for id,fkFn in fkFnsNoBlame %}
    /**
     * @Route("/find-{{ fkFn.route }}", methods={"POST"}, name="{{ fkFn.fkRoute }}.find.{{ fkFn.route }}")
     * @Cache(smaxage="3600")
     * @Security("is_granted('ROLE_ADMIN') or is_granted('ROLE_USER_{{ fkFn.fnSingular|upper }}_INDEX')", statusCode=401)
     */
    public function find{{ fkFn.fnSingular }}(Request $request, Find{{ entity }}{{ fkFn.fnSingular }}UseCase $useCase): Response
    {
        if (!$request->isXmlHttpRequest()) {
            return new JsonResponse([], Response::HTTP_BAD_REQUEST);
        }

        $request = new Find{{ entity }}{{ fkFn.fnSingular }}Request($request->request->all());

        $response = $useCase->execute($request);

        return new JsonResponse([
            'results' => $response->{{ fkFn.items }},
            'pagination' => ['more' => false],
        ]);
    }
{% if not loop.last %}

{% endif %}
{% endfor %}
}
