<?php declare(strict_types=1);
{{ header|raw }}
namespace Domain\{{ entity }}\UseCase;

use Domain\{{ entity }}\{{ entity }}Repository;
use Domain\{{ entity }}\Request\{{ action }}{{ entity }}Request;
use Domain\{{ entity }}\Response\{{ action }}{{ entity }}Response;

final class {{ action }}{{ entity }}UseCase
{
{% for id, property in properties %}
    private ${{ id }};
{% if loop.last %}

{% endif %}
{% endfor %}
    private {{ entity }}Repository ${{ item }}Repository;

    public function __construct({{ entity }}Repository ${{ item }}Repository)
    {
        $this->{{ item }}Repository = ${{ item }}Repository;
    }

    public function execute({{ action }}{{ entity }}Request $request): {{ action }}{{ entity }}Response
    {
{% for id, property in properties %}
        $this->{{ id }} = $request->{{ id }};
{% if loop.last %}

{% endif %}
{% endfor %}
        return new {{ action }}{{ entity }}Response();
    }
}
