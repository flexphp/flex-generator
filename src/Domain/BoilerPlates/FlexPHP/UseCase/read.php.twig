{% set useStatements = [] %}
<?php declare(strict_types=1);
{{ header|raw }}
namespace Domain\{{ entity }}\UseCase;

{% set useStatements = useStatements|merge(['use Domain\\' ~ entity ~ '\\' ~ entity ~ 'Repository;']) %}
{% set useStatements = useStatements|merge(['use Domain\\' ~ entity ~ '\\Request\\' ~ action ~ entity ~ 'Request;']) %}
{% set useStatements = useStatements|merge(['use Domain\\' ~ entity ~ '\\Response\\' ~ action ~ entity ~ 'Response;']) %}
{{ useStatements|sort|join("\n") }}

final class {{ action }}{{ entity }}UseCase
{
    private {{ entity }}Repository ${{ item }}Repository;

    public function __construct({{ entity }}Repository ${{ item }}Repository)
    {
        $this->{{ item }}Repository = ${{ item }}Repository;
    }

    public function execute({{ action }}{{ entity }}Request $request): {{ action }}{{ entity }}Response
    {
        ${{ item }} = $this->{{ item }}Repository->getById($request);

        return new {{ action }}{{ entity }}Response(${{ item }});
    }
}
