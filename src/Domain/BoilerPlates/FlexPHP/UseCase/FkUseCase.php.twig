{% set useStatements = [] %}
<?php declare(strict_types=1);
{{ header|raw }}
namespace Domain\{{ pkEntity }}\UseCase;

{% set useStatements = useStatements|merge(['use Domain\\' ~ pkEntity ~ '\\' ~ pkEntity ~ 'Repository;']) %}
{% set useStatements = useStatements|merge(['use Domain\\' ~ pkEntity ~ '\\Request\\Find' ~ pkEntity ~ fkEntity ~ 'Request;']) %}
{% set useStatements = useStatements|merge(['use Domain\\' ~ pkEntity ~ '\\Response\\Find' ~ pkEntity ~ fkEntity ~ 'Response;']) %}
{{ useStatements|sort|join("\n") }}

final class Find{{ pkEntity }}{{ fkEntity }}UseCase
{
    private {{ pkEntity }}Repository ${{ pkItem }}Repository;

    public function __construct({{ pkEntity }}Repository ${{ pkItem }}Repository)
    {
        $this->{{ pkItem }}Repository = ${{ pkItem }}Repository;
    }

    public function execute(Find{{ pkEntity }}{{ fkEntity }}Request $request): Find{{ pkEntity }}{{ fkEntity }}Response
    {
        ${{ fkItems }} = $this->{{ pkItem }}Repository->find{{ name }}By($request);

        return new Find{{ pkEntity }}{{ fkEntity }}Response(${{ fkItems }});
    }
}
