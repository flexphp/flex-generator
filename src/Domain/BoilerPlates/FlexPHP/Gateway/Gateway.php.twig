{% set methods = actions|filter(v => v in ['index', 'create', 'read', 'update', 'delete', 'login']) %}
{% set fkFnsNoBlame = fkFns|filter(v => not v.blameBy) %}
{% set useStatements = [] %}
<?php declare(strict_types=1);
{{ header|raw }}
namespace Domain\{{ entity }};
{% for fkFn in fkFnsNoBlame %}
{% set useStatements = useStatements|merge(['use Domain\\' ~ entity ~ '\\Request\\Find' ~ entity ~ fkFn.fnSingular ~ 'Request;']) %}
{% endfor %}
{% if useStatements|length > 0 %}

{{ useStatements|sort|join("\n") }}
{% endif %}

interface {{ entity }}Gateway
{
{% for action in methods %}
{% if not loop.first %}

{% endif %}
{% if action in ['index'] %}
    public function search(array $wheres, array $orders, int $page, int $limit, int $offset): array;
{% elseif action in ['create'] %}
    public function push({{ entity }} ${{ item }}): {{ typeHint }};
{% elseif action in ['read'] %}
    public function get({{ entity }} ${{ item }}): array;
{% elseif action in ['update'] %}
    public function shift({{ entity }} ${{ item }}): void;
{% elseif action in ['delete'] %}
    public function pop({{ entity }} ${{ item }}): void;
{% elseif action in ['login'] %}
    public function getBy(string $column, $value): array;
{% endif %}
{% endfor %}
{% if methods|length > 0 and fkFnsNoBlame|length > 0 %}

{% endif %}
{% for fkFn in fkFnsNoBlame %}
    public function filter{{ fkFn.fnPlural }}(Find{{ entity }}{{ fkFn.fnSingular }}Request $request, int $page, int $limit): array;
{% if not loop.last %}

{% endif %}
{% endfor %}
}
