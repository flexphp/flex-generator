<?php declare(strict_types=1);

namespace Domain\{{ entity }};

{% for request in requests %}
use Domain\{{ entity }}\Request\{{ request }}{{ entity }}Request;
{% endfor %}
use FlexPHP\Repositories\Repository;

final class {{ entity }}Repository extends Repository
{
{% for action in actions %}
{% if action in ['index'] %}
    public function findBy(IndexPostRequest $request): array
    {
        return $this->getGateway()->search((array)$request, [], 10);
    }
{% elseif action in ['create'] %}
    public function add(Create{{ entity }}Request $request): void
    {
        ${{ item }} = (new {{ entity }}Factory())->make($request);

        $this->getGateway()->push(${{ item }});
    }
{% elseif action in ['read'] %}
    public function getById(Read{{ entity }}Request $request): {{ entity }}
    {
        $factory = new {{ entity }}Factory();
        $data = $this->getGateway()->get($factory->make($request));

        return $factory->make($data);
    }
{% elseif action in ['update'] %}
    public function change(Update{{ entity }}Request $request): void
    {
        ${{ item }} = (new {{ entity }}Factory())->make($request);

        $this->getGateway()->shift(${{ item }});
    }
{% elseif action in ['delete'] %}
    public function remove(Delete{{ entity }}Request $request): void
    {
        ${{ item }} = (new {{ entity }}Factory())->make($request);

        $this->getGateway()->pop(${{ item }});
    }
{% endif %}
{% if not loop.last %}

{% endif %}
{% endfor %}
}
