<?php declare(strict_types=1);

namespace Domain\{{ entity }};

use Symfony\Component\Form\AbstractType;
use Symfony\Component\Form\Extension\Core\Type as InputType;
use Symfony\Component\Form\FormBuilderInterface;

final class {{ entity }}FormType extends AbstractType
{
    public function buildForm(FormBuilderInterface $builder, array $options): void
    {
{% for id, property in properties %}
        $builder->add('{{ id }}', InputType\{{ inputs[loop.index - 1] }}Type::class, [
            'label' => '{{ labels[loop.index - 1] }}',
{% if property.Constraints.required|default(false) %}
            'required' => true,
{% else %}
            'required' => false,
{% endif %}
{% if property.Constraints|filter(v => v != 'required')|length > 0 %}
            'attr' => [
{% if property.Constraints.minlength %}
                'minlength' => {{ property.Constraints.minlength }},
{% endif %}
{% if property.Constraints.maxlength %}
                'maxlength' => {{ property.Constraints.maxlength }},
{% endif %}
{% if property.Constraints.min %}
                'min' => {{ property.Constraints.min }},
{% endif %}
{% if property.Constraints.max %}
                'max' => {{ property.Constraints.max }},
{% endif %}
            ],
{% endif %}
{% if inputs[loop.index - 1] in ['Date', 'Time', 'DateTime'] %}
            'input' => 'string',
            'date_widget' => 'single_text',
            'time_widget' => 'single_text',
            'format' => 'Y-m-d H:i:s',
{% endif %}
        ]);
{% endfor %}
    }
}
