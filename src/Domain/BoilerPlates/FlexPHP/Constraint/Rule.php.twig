{% if not property.isCa and not property.isUa  %}
    private function {{ name }}(): array
    {
        return [
{% if property.isRequired %}
            new Assert\NotNull(),
            new Assert\NotBlank(),
{% endif %}
{% if property.typeHint starts with '\\Date' %}
            new Assert\DateTime(),
{% else  %}
            new Assert\Type([
                'type' => '{{ property.typeHint }}',
            ]),
{% endif %}
{% if property.minlength or property.maxlength %}
            new Assert\Length([
{% if property.minlength %}
                'min' => {{ property.minlength }},
{% endif %}
{% if property.maxlength %}
                'max' => {{ property.maxlength }},
{% endif %}
            ]),
{% endif %}
{% if property.mincheck or property.maxcheck %}
            new Assert\Count([
{% if property.mincheck %}
                'min' => {{ property.mincheck }},
{% endif %}
{% if property.maxcheck %}
                'max' => {{ property.maxcheck }},
{% endif %}
            ]),
{% endif %}
{% if property.min %}
            new Assert\LessThanOrEqual([
                'value' => {{ property.min }},
            ]),
{% endif %}
{% if property.max %}
            new Assert\GreaterThanOrEqual([
                'value' => {{ property.max }},
            ]),
{% endif %}
{% if property.equalTo %}
            new Assert\EqualTo([
                'value' => '{{ property.equalTo }}',
            ]),
{% endif %}
{% if property.pattern %}
            new Assert\Regex([
                'pattern' => '{{ property.pattern }}',
            ]),
{% endif %}
        ];
    }
{% endif %}