<?php declare(strict_types=1);

namespace Domain\{{ entity }}\Response;

{% if action|lower in ['read', 'login'] %}
use Domain\{{ entity }}\{{ entity }};
{% endif %}
use FlexPHP\Messages\ResponseInterface;

final class {{ action }}{{ entity }}Response implements ResponseInterface
{
{% if action|lower == 'index' %}
    public ${{ items }};

    public function __construct(array ${{ items }})
    {
        $this->{{ items }} = ${{ items }};
    }
{% elseif action|lower in ['create', 'update', 'delete'] %}
    public $code;
    public $status;
    public $message;

    public function __construct(int $code, string $status, string $message)
    {
        $this->code = $code;
        $this->status = $status;
        $this->message = $message;
    }
{% elseif action|lower in ['read', 'login'] %}
    public ${{ item }};

    public function __construct({{ entity }} ${{ item }})
    {
        $this->{{ item }} = ${{ item }};
    }
{% else %}
    public function __construct(array $data = [])
    {
    }
{% endif %}
}
