<?php declare(strict_types=1);

namespace Domain\{{ entity }}\Command;

use Domain\{{ entity }}\Request\{{ action }}{{ entity }}Request;
use Domain\{{ entity }}\UseCase\{{ action }}{{ entity }}UseCase;
use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface; 

final class {{ action }}{{ entity }}Command extends Command
{
    protected function configure($request)
    {
        $this
            ->setName('{{ command }}')
{% if properties %}
            ->setDescription('Command to {{ action }} on {{ entity }}')
{% else %}
            ->setDescription('Command to {{ action }} on {{ entity }}');
{% endif %}
{% for id, property in properties %}
{% if not loop.last %}
            ->addArgument('{{ id }}', InputArgument::REQUIRED)
{% else %}
            ->addArgument('{{ id }}', InputArgument::REQUIRED);
{% endif %}
{% endfor %}
    }

    protected function execute(InputInterface $input, OutputInterface $output)
    {
        $data = $input->getArguments();

        $request = new {{ action }}{{ entity }}Request($data);
        $useCase = new {{ action }}{{ entity }}UseCase();
        $response = $useCase->execute($request);

        $output->writeln('{{ action }} on {{ entity }} done!');
    }
}
