{% set is_user = name == 'User' %}
<?php declare(strict_types=1);

namespace Domain\{{ name }};

{% if is_user %}
use Symfony\Component\Security\Core\User\UserInterface;

final class {{ name }} implements UserInterface
{% else %}
final class {{ name }}
{% endif %}
{
{% for _property in _properties %}
    private ${{ _property }};
{% endfor %}
{% if getters %}

{% endif %}
{% for getter in getters %}
{% if not loop.last %}
{{ getter|raw }}

{% else %}
{{ getter|raw }}
{% endif %}
{% endfor %}
{% if setters %}

{% endif %}
{% for setter in setters %}
{% if not loop.last %}
{{ setter|raw }}

{% else %}
{{ setter|raw }}
{% endif %}
{% endfor %}
{% if (getters or setters) and is_user %}

{% endif %}
{% if is_user %}
    public function getUsername()
    {
        return $this->name();
    }

    public function getPassword()
    {
        return $this->password();
    }

    public function getSalt()
    {
        return null;
    }

    public function getRoles()
    {
        return ['ROLE_ADMIN', 'ROLE_USER'];
    }

    public function eraseCredentials()
    {
        return true;
    }
{% endif %}
}
